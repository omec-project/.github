# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 Canonical Ltd.
name: E2E tests

on:
  workflow_call:
    inputs:
      branch_name:
        description: "Name of the branch to checkout"
        required: false
        type: string
        default: ${{ github.ref }}

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update and install dependencies
        run: |
          sudo apt update
          sudo apt-get install -y conntrack socat ipset ebtables ansible-core
          sudo apt install -y sshpass python3-venv pipx make git
          pipx install --include-deps ansible
          pipx ensurepath
          source ~/.bashrc

      - name: Generate SSH Key
        run: |
          ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -N "" -q
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys

      - name: Clone aether-onramp repository
        run: |
          git clone --recursive https://github.com/opennetworkinglab/aether-onramp.git

      - name: Update files
        run: |
          INTERFACE=$(ip route | grep default | awk '{print $5}')
          IP_ADDR=$(ip a show ${INTERFACE} | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
          echo "Extracted IP: ${IP_ADDR}"
          echo "[all]" > aether-onramp/hosts.ini
          echo "node1 ansible_host=${IP_ADDR} ansible_user=runner ansible_ssh_private_key_file=~/.ssh/id_rsa" >> aether-onramp/hosts.ini
          echo "" >> aether-onramp/hosts.ini
          echo "[master_nodes]" >> aether-onramp/hosts.ini
          echo "node1" >> aether-onramp/hosts.ini
          echo "" >> aether-onramp/hosts.ini
          echo "[worker_nodes]" >> aether-onramp/hosts.ini
          echo "" >> aether-onramp/hosts.ini
          echo "[gnbsim_nodes]" >> aether-onramp/hosts.ini
          echo "node1" >> aether-onramp/hosts.ini
          sed -i "s/ens18/eth0/" aether-onramp/vars/main.yml
          sed -i "s/10.76.28.113/${IP_ADDR}/" aether-onramp/vars/main.yml
          sed -i "s/300s/600s/" aether-onramp/deps/k8s/roles/rke2/tasks/install.yml
          sed -i '99d' aether-onramp/deps/k8s/roles/rke2/tasks/install.yml
          sed -i "s/2m30s/10m/" aether-onramp/deps/5gc/roles/core/tasks/install.yml

      - name: Test aether-pingall
        working-directory: aether-onramp
        run: make aether-pingall

      - name: Install aether-k8s
        working-directory: aether-onramp
        run: |
          make aether-k8s-install

      - name: Install 5G Core
        working-directory: aether-onramp
        run: |
          make aether-5gc-install

      - name: Patch K8s Deployment to attach local image
        run: |
          set -x
          git clone https://github.com/omec-project/amf && \
          cd amf && \
          PR_NUMBER=$(echo "${GITHUB_REF}" | awk -F'/' '{print $3}') && \
          git fetch origin pull/${PR_NUMBER}/merge:pr-${PR_NUMBER} && \
          git checkout pr-${PR_NUMBER}
          docker build -t amf:testing . || exit 1
          kubectl set image deployment/amf amf=amf:testing -n aether-5gc || exit 1
          kubectl -n aether-5gc patch deployment amf -p '{"spec":{"template":{"spec":{"containers":[{"name":"amf","imagePullPolicy":"Never"}]}}}}' || exit 1

      - name: Install GNBSIM
        working-directory: aether-onramp
        run: |
          make aether-gnbsim-install

      - name: Perform tests
        working-directory: aether-onramp
        run: |
          make aether-gnbsim-run

      - name: Validate results
        working-directory: aether-onramp
        run: |
          status=$(docker exec gnbsim-1 cat summary.log)
          if echo "$status" | grep -q "Profile Status: FAIL"; then
            echo "Profile Status indicates failure."
            exit 1
          else
            echo "Profile Status is successful."
          fi
